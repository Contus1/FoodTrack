{"ast":null,"code":"var _jsxFileName = \"/Users/calichtl/Desktop/FoodTrack/src/context/EntriesContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport supabase from '../utils/supabaseClient';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EntriesContext = /*#__PURE__*/createContext();\nexport const useEntries = () => {\n  _s();\n  const context = useContext(EntriesContext);\n  if (!context) {\n    throw new Error('useEntries must be used within an EntriesProvider');\n  }\n  return context;\n};\n_s(useEntries, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const EntriesProvider = ({\n  children\n}) => {\n  _s2();\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const {\n    user\n  } = useAuth();\n  const fetchEntries = async () => {\n    if (!user) return;\n    setLoading(true);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('entries').select('*').eq('user_id', user.id).order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      setEntries(data || []);\n    } catch (error) {\n      console.error('Error fetching entries:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addEntry = async entryData => {\n    if (!user) return {\n      error: 'User not authenticated'\n    };\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('entries').insert([{\n        ...entryData,\n        user_id: user.id\n      }]).select().single();\n      if (error) throw error;\n      setEntries(prev => [data, ...prev]);\n      return {\n        data,\n        error: null\n      };\n    } catch (error) {\n      console.error('Error adding entry:', error);\n      return {\n        data: null,\n        error\n      };\n    }\n  };\n  const uploadImage = async file => {\n    if (!file) return null;\n    try {\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${user.id}/${Date.now()}.${fileExt}`;\n      const {\n        error\n      } = await supabase.storage.from('food-images').upload(fileName, file);\n      if (error) throw error;\n      const {\n        data: urlData\n      } = supabase.storage.from('food-images').getPublicUrl(fileName);\n      return urlData.publicUrl;\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      return null;\n    }\n  };\n  const value = {\n    entries,\n    loading,\n    fetchEntries,\n    addEntry,\n    uploadImage\n  };\n  return /*#__PURE__*/_jsxDEV(EntriesContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s2(EntriesProvider, \"6NvVrX/+7zxWes5x7K1on08XuWc=\", false, function () {\n  return [useAuth];\n});\n_c = EntriesProvider;\nvar _c;\n$RefreshReg$(_c, \"EntriesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","supabase","useAuth","jsxDEV","_jsxDEV","EntriesContext","useEntries","_s","context","Error","EntriesProvider","children","_s2","entries","setEntries","loading","setLoading","user","fetchEntries","data","error","from","select","eq","id","order","ascending","console","addEntry","entryData","insert","user_id","single","prev","uploadImage","file","fileExt","name","split","pop","fileName","Date","now","storage","upload","urlData","getPublicUrl","publicUrl","value","Provider","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/calichtl/Desktop/FoodTrack/src/context/EntriesContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport supabase from '../utils/supabaseClient';\nimport { useAuth } from './AuthContext';\n\nconst EntriesContext = createContext();\n\nexport const useEntries = () => {\n  const context = useContext(EntriesContext);\n  if (!context) {\n    throw new Error('useEntries must be used within an EntriesProvider');\n  }\n  return context;\n};\n\nexport const EntriesProvider = ({ children }) => {\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { user } = useAuth();\n\n  const fetchEntries = async () => {\n    if (!user) return;\n    \n    setLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from('entries')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setEntries(data || []);\n    } catch (error) {\n      console.error('Error fetching entries:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addEntry = async (entryData) => {\n    if (!user) return { error: 'User not authenticated' };\n\n    try {\n      const { data, error } = await supabase\n        .from('entries')\n        .insert([{\n          ...entryData,\n          user_id: user.id\n        }])\n        .select()\n        .single();\n\n      if (error) throw error;\n      \n      setEntries(prev => [data, ...prev]);\n      return { data, error: null };\n    } catch (error) {\n      console.error('Error adding entry:', error);\n      return { data: null, error };\n    }\n  };\n\n  const uploadImage = async (file) => {\n    if (!file) return null;\n\n    try {\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${user.id}/${Date.now()}.${fileExt}`;\n      \n      const { error } = await supabase.storage\n        .from('food-images')\n        .upload(fileName, file);\n\n      if (error) throw error;\n\n      const { data: urlData } = supabase.storage\n        .from('food-images')\n        .getPublicUrl(fileName);\n\n      return urlData.publicUrl;\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      return null;\n    }\n  };\n\n  const value = {\n    entries,\n    loading,\n    fetchEntries,\n    addEntry,\n    uploadImage,\n  };\n\n  return (\n    <EntriesContext.Provider value={value}>\n      {children}\n    </EntriesContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,gBAAGP,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMQ,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,OAAO,GAAGT,UAAU,CAACM,cAAc,CAAC;EAC1C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,UAAU;AAQvB,OAAO,MAAMI,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM;IAAEiB;EAAK,CAAC,GAAGf,OAAO,CAAC,CAAC;EAE1B,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACD,IAAI,EAAE;IAEXD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAM;QAAEG,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMnB,QAAQ,CACnCoB,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,SAAS,EAAEN,IAAI,CAACO,EAAE,CAAC,CACtBC,KAAK,CAAC,YAAY,EAAE;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC;MAE5C,IAAIN,KAAK,EAAE,MAAMA,KAAK;MACtBN,UAAU,CAACK,IAAI,IAAI,EAAE,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMY,QAAQ,GAAG,MAAOC,SAAS,IAAK;IACpC,IAAI,CAACZ,IAAI,EAAE,OAAO;MAAEG,KAAK,EAAE;IAAyB,CAAC;IAErD,IAAI;MACF,MAAM;QAAED,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMnB,QAAQ,CACnCoB,IAAI,CAAC,SAAS,CAAC,CACfS,MAAM,CAAC,CAAC;QACP,GAAGD,SAAS;QACZE,OAAO,EAAEd,IAAI,CAACO;MAChB,CAAC,CAAC,CAAC,CACFF,MAAM,CAAC,CAAC,CACRU,MAAM,CAAC,CAAC;MAEX,IAAIZ,KAAK,EAAE,MAAMA,KAAK;MAEtBN,UAAU,CAACmB,IAAI,IAAI,CAACd,IAAI,EAAE,GAAGc,IAAI,CAAC,CAAC;MACnC,OAAO;QAAEd,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC;IAC9B,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,OAAO;QAAED,IAAI,EAAE,IAAI;QAAEC;MAAM,CAAC;IAC9B;EACF,CAAC;EAED,MAAMc,WAAW,GAAG,MAAOC,IAAI,IAAK;IAClC,IAAI,CAACA,IAAI,EAAE,OAAO,IAAI;IAEtB,IAAI;MACF,MAAMC,OAAO,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;MAC1C,MAAMC,QAAQ,GAAG,GAAGvB,IAAI,CAACO,EAAE,IAAIiB,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIN,OAAO,EAAE;MAEtD,MAAM;QAAEhB;MAAM,CAAC,GAAG,MAAMnB,QAAQ,CAAC0C,OAAO,CACrCtB,IAAI,CAAC,aAAa,CAAC,CACnBuB,MAAM,CAACJ,QAAQ,EAAEL,IAAI,CAAC;MAEzB,IAAIf,KAAK,EAAE,MAAMA,KAAK;MAEtB,MAAM;QAAED,IAAI,EAAE0B;MAAQ,CAAC,GAAG5C,QAAQ,CAAC0C,OAAO,CACvCtB,IAAI,CAAC,aAAa,CAAC,CACnByB,YAAY,CAACN,QAAQ,CAAC;MAEzB,OAAOK,OAAO,CAACE,SAAS;IAC1B,CAAC,CAAC,OAAO3B,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAM4B,KAAK,GAAG;IACZnC,OAAO;IACPE,OAAO;IACPG,YAAY;IACZU,QAAQ;IACRM;EACF,CAAC;EAED,oBACE9B,OAAA,CAACC,cAAc,CAAC4C,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAArC,QAAA,EACnCA;EAAQ;IAAA6B,QAAA,EAAAU,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACxC,GAAA,CArFWF,eAAe;EAAA,QAGTR,OAAO;AAAA;AAAAmD,EAAA,GAHb3C,eAAe;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}