{"ast":null,"code":"import{createClient}from'@supabase/supabase-js';const supabaseUrl=process.env.REACT_APP_SUPABASE_URL;const supabaseAnonKey=process.env.REACT_APP_SUPABASE_ANON_KEY;// Create a mock client for development when Supabase is not configured\nconst mockSupabase={auth:{getSession:()=>Promise.resolve({data:{session:null},error:null}),onAuthStateChange:()=>({data:{subscription:{unsubscribe:()=>{}}}}),signUp:()=>Promise.resolve({data:null,error:{message:'Please configure Supabase environment variables'}}),signInWithPassword:()=>Promise.resolve({data:null,error:{message:'Please configure Supabase environment variables'}}),signOut:()=>Promise.resolve({error:null})},from:()=>({select:()=>({eq:()=>({order:()=>Promise.resolve({data:[],error:null})})}),insert:()=>({select:()=>({single:()=>Promise.resolve({data:null,error:{message:'Please configure Supabase environment variables'}})})})}),storage:{from:()=>({upload:()=>Promise.resolve({data:null,error:{message:'Please configure Supabase environment variables'}}),getPublicUrl:()=>({data:{publicUrl:'https://via.placeholder.com/300x200?text=Demo+Image'}})})}};// Check if environment variables are properly set\nlet supabase;if(!supabaseUrl||!supabaseAnonKey||supabaseUrl==='your-supabase-url-here'||supabaseAnonKey==='your-supabase-anon-key-here'){console.warn('⚠️ Supabase environment variables not configured. Using mock client for demo purposes.');console.warn('Please set REACT_APP_SUPABASE_URL and REACT_APP_SUPABASE_ANON_KEY in your .env file.');supabase=mockSupabase;}else{supabase=createClient(supabaseUrl,supabaseAnonKey);}export default supabase;","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","mockSupabase","auth","getSession","Promise","resolve","data","session","error","onAuthStateChange","subscription","unsubscribe","signUp","message","signInWithPassword","signOut","from","select","eq","order","insert","single","storage","upload","getPublicUrl","publicUrl","supabase","console","warn"],"sources":["/Users/calichtl/Desktop/FoodTrack/src/utils/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// Create a mock client for development when Supabase is not configured\nconst mockSupabase = {\n  auth: {\n    getSession: () => Promise.resolve({ data: { session: null }, error: null }),\n    onAuthStateChange: () => ({ data: { subscription: { unsubscribe: () => {} } } }),\n    signUp: () => Promise.resolve({ data: null, error: { message: 'Please configure Supabase environment variables' } }),\n    signInWithPassword: () => Promise.resolve({ data: null, error: { message: 'Please configure Supabase environment variables' } }),\n    signOut: () => Promise.resolve({ error: null })\n  },\n  from: () => ({\n    select: () => ({ eq: () => ({ order: () => Promise.resolve({ data: [], error: null }) }) }),\n    insert: () => ({ select: () => ({ single: () => Promise.resolve({ data: null, error: { message: 'Please configure Supabase environment variables' } }) }) })\n  }),\n  storage: {\n    from: () => ({\n      upload: () => Promise.resolve({ data: null, error: { message: 'Please configure Supabase environment variables' } }),\n      getPublicUrl: () => ({ data: { publicUrl: 'https://via.placeholder.com/300x200?text=Demo+Image' } })\n    })\n  }\n};\n\n// Check if environment variables are properly set\nlet supabase;\nif (!supabaseUrl || !supabaseAnonKey || \n    supabaseUrl === 'your-supabase-url-here' || \n    supabaseAnonKey === 'your-supabase-anon-key-here') {\n  console.warn('⚠️ Supabase environment variables not configured. Using mock client for demo purposes.');\n  console.warn('Please set REACT_APP_SUPABASE_URL and REACT_APP_SUPABASE_ANON_KEY in your .env file.');\n  supabase = mockSupabase;\n} else {\n  supabase = createClient(supabaseUrl, supabaseAnonKey);\n}\n\nexport default supabase;\n"],"mappings":"AAAA,OAASA,YAAY,KAAQ,uBAAuB,CAEpD,KAAM,CAAAC,WAAW,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CACtD,KAAM,CAAAC,eAAe,CAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B,CAE/D;AACA,KAAM,CAAAC,YAAY,CAAG,CACnBC,IAAI,CAAE,CACJC,UAAU,CAAEA,CAAA,GAAMC,OAAO,CAACC,OAAO,CAAC,CAAEC,IAAI,CAAE,CAAEC,OAAO,CAAE,IAAK,CAAC,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAC3EC,iBAAiB,CAAEA,CAAA,IAAO,CAAEH,IAAI,CAAE,CAAEI,YAAY,CAAE,CAAEC,WAAW,CAAEA,CAAA,GAAM,CAAC,CAAE,CAAE,CAAE,CAAC,CAAC,CAChFC,MAAM,CAAEA,CAAA,GAAMR,OAAO,CAACC,OAAO,CAAC,CAAEC,IAAI,CAAE,IAAI,CAAEE,KAAK,CAAE,CAAEK,OAAO,CAAE,iDAAkD,CAAE,CAAC,CAAC,CACpHC,kBAAkB,CAAEA,CAAA,GAAMV,OAAO,CAACC,OAAO,CAAC,CAAEC,IAAI,CAAE,IAAI,CAAEE,KAAK,CAAE,CAAEK,OAAO,CAAE,iDAAkD,CAAE,CAAC,CAAC,CAChIE,OAAO,CAAEA,CAAA,GAAMX,OAAO,CAACC,OAAO,CAAC,CAAEG,KAAK,CAAE,IAAK,CAAC,CAChD,CAAC,CACDQ,IAAI,CAAEA,CAAA,IAAO,CACXC,MAAM,CAAEA,CAAA,IAAO,CAAEC,EAAE,CAAEA,CAAA,IAAO,CAAEC,KAAK,CAAEA,CAAA,GAAMf,OAAO,CAACC,OAAO,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEE,KAAK,CAAE,IAAK,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC3FY,MAAM,CAAEA,CAAA,IAAO,CAAEH,MAAM,CAAEA,CAAA,IAAO,CAAEI,MAAM,CAAEA,CAAA,GAAMjB,OAAO,CAACC,OAAO,CAAC,CAAEC,IAAI,CAAE,IAAI,CAAEE,KAAK,CAAE,CAAEK,OAAO,CAAE,iDAAkD,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAC7J,CAAC,CAAC,CACFS,OAAO,CAAE,CACPN,IAAI,CAAEA,CAAA,IAAO,CACXO,MAAM,CAAEA,CAAA,GAAMnB,OAAO,CAACC,OAAO,CAAC,CAAEC,IAAI,CAAE,IAAI,CAAEE,KAAK,CAAE,CAAEK,OAAO,CAAE,iDAAkD,CAAE,CAAC,CAAC,CACpHW,YAAY,CAAEA,CAAA,IAAO,CAAElB,IAAI,CAAE,CAAEmB,SAAS,CAAE,qDAAsD,CAAE,CAAC,CACrG,CAAC,CACH,CACF,CAAC,CAED;AACA,GAAI,CAAAC,QAAQ,CACZ,GAAI,CAAC/B,WAAW,EAAI,CAACI,eAAe,EAChCJ,WAAW,GAAK,wBAAwB,EACxCI,eAAe,GAAK,6BAA6B,CAAE,CACrD4B,OAAO,CAACC,IAAI,CAAC,wFAAwF,CAAC,CACtGD,OAAO,CAACC,IAAI,CAAC,sFAAsF,CAAC,CACpGF,QAAQ,CAAGzB,YAAY,CACzB,CAAC,IAAM,CACLyB,QAAQ,CAAGhC,YAAY,CAACC,WAAW,CAAEI,eAAe,CAAC,CACvD,CAEA,cAAe,CAAA2B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}