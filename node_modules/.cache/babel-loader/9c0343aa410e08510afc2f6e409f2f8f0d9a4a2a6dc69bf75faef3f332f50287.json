{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// Create a mock client for development when Supabase is not configured\nconst mockSupabase = {\n  auth: {\n    getSession: () => Promise.resolve({\n      data: {\n        session: null\n      },\n      error: null\n    }),\n    onAuthStateChange: () => ({\n      data: {\n        subscription: {\n          unsubscribe: () => {}\n        }\n      }\n    }),\n    signUp: () => Promise.resolve({\n      data: null,\n      error: {\n        message: 'Please configure Supabase environment variables'\n      }\n    }),\n    signInWithPassword: () => Promise.resolve({\n      data: null,\n      error: {\n        message: 'Please configure Supabase environment variables'\n      }\n    }),\n    signOut: () => Promise.resolve({\n      error: null\n    })\n  },\n  from: () => ({\n    select: () => ({\n      eq: () => ({\n        order: () => Promise.resolve({\n          data: [],\n          error: null\n        })\n      })\n    }),\n    insert: () => ({\n      select: () => ({\n        single: () => Promise.resolve({\n          data: null,\n          error: {\n            message: 'Please configure Supabase environment variables'\n          }\n        })\n      })\n    })\n  }),\n  storage: {\n    from: () => ({\n      upload: () => Promise.resolve({\n        data: null,\n        error: {\n          message: 'Please configure Supabase environment variables'\n        }\n      }),\n      getPublicUrl: () => ({\n        data: {\n          publicUrl: 'https://via.placeholder.com/300x200?text=Demo+Image'\n        }\n      })\n    })\n  }\n};\n\n// Check if environment variables are properly set\nlet supabase;\nif (!supabaseUrl || !supabaseAnonKey || supabaseUrl === 'your-supabase-url-here' || supabaseAnonKey === 'your-supabase-anon-key-here') {\n  console.warn('⚠️ Supabase environment variables not configured. Using mock client for demo purposes.');\n  console.warn('Please set REACT_APP_SUPABASE_URL and REACT_APP_SUPABASE_ANON_KEY in your .env file.');\n  supabase = mockSupabase;\n} else {\n  supabase = createClient(supabaseUrl, supabaseAnonKey);\n}\nexport default supabase;","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","mockSupabase","auth","getSession","Promise","resolve","data","session","error","onAuthStateChange","subscription","unsubscribe","signUp","message","signInWithPassword","signOut","from","select","eq","order","insert","single","storage","upload","getPublicUrl","publicUrl","supabase","console","warn"],"sources":["/Users/calichtl/Desktop/FoodTrack/src/utils/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// Create a mock client for development when Supabase is not configured\nconst mockSupabase = {\n  auth: {\n    getSession: () => Promise.resolve({ data: { session: null }, error: null }),\n    onAuthStateChange: () => ({ data: { subscription: { unsubscribe: () => {} } } }),\n    signUp: () => Promise.resolve({ data: null, error: { message: 'Please configure Supabase environment variables' } }),\n    signInWithPassword: () => Promise.resolve({ data: null, error: { message: 'Please configure Supabase environment variables' } }),\n    signOut: () => Promise.resolve({ error: null })\n  },\n  from: () => ({\n    select: () => ({ eq: () => ({ order: () => Promise.resolve({ data: [], error: null }) }) }),\n    insert: () => ({ select: () => ({ single: () => Promise.resolve({ data: null, error: { message: 'Please configure Supabase environment variables' } }) }) })\n  }),\n  storage: {\n    from: () => ({\n      upload: () => Promise.resolve({ data: null, error: { message: 'Please configure Supabase environment variables' } }),\n      getPublicUrl: () => ({ data: { publicUrl: 'https://via.placeholder.com/300x200?text=Demo+Image' } })\n    })\n  }\n};\n\n// Check if environment variables are properly set\nlet supabase;\nif (!supabaseUrl || !supabaseAnonKey || \n    supabaseUrl === 'your-supabase-url-here' || \n    supabaseAnonKey === 'your-supabase-anon-key-here') {\n  console.warn('⚠️ Supabase environment variables not configured. Using mock client for demo purposes.');\n  console.warn('Please set REACT_APP_SUPABASE_URL and REACT_APP_SUPABASE_ANON_KEY in your .env file.');\n  supabase = mockSupabase;\n} else {\n  supabase = createClient(supabaseUrl, supabaseAnonKey);\n}\n\nexport default supabase;\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACtD,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B;;AAE/D;AACA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE;IACJC,UAAU,EAAEA,CAAA,KAAMC,OAAO,CAACC,OAAO,CAAC;MAAEC,IAAI,EAAE;QAAEC,OAAO,EAAE;MAAK,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IAC3EC,iBAAiB,EAAEA,CAAA,MAAO;MAAEH,IAAI,EAAE;QAAEI,YAAY,EAAE;UAAEC,WAAW,EAAEA,CAAA,KAAM,CAAC;QAAE;MAAE;IAAE,CAAC,CAAC;IAChFC,MAAM,EAAEA,CAAA,KAAMR,OAAO,CAACC,OAAO,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEE,KAAK,EAAE;QAAEK,OAAO,EAAE;MAAkD;IAAE,CAAC,CAAC;IACpHC,kBAAkB,EAAEA,CAAA,KAAMV,OAAO,CAACC,OAAO,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEE,KAAK,EAAE;QAAEK,OAAO,EAAE;MAAkD;IAAE,CAAC,CAAC;IAChIE,OAAO,EAAEA,CAAA,KAAMX,OAAO,CAACC,OAAO,CAAC;MAAEG,KAAK,EAAE;IAAK,CAAC;EAChD,CAAC;EACDQ,IAAI,EAAEA,CAAA,MAAO;IACXC,MAAM,EAAEA,CAAA,MAAO;MAAEC,EAAE,EAAEA,CAAA,MAAO;QAAEC,KAAK,EAAEA,CAAA,KAAMf,OAAO,CAACC,OAAO,CAAC;UAAEC,IAAI,EAAE,EAAE;UAAEE,KAAK,EAAE;QAAK,CAAC;MAAE,CAAC;IAAE,CAAC,CAAC;IAC3FY,MAAM,EAAEA,CAAA,MAAO;MAAEH,MAAM,EAAEA,CAAA,MAAO;QAAEI,MAAM,EAAEA,CAAA,KAAMjB,OAAO,CAACC,OAAO,CAAC;UAAEC,IAAI,EAAE,IAAI;UAAEE,KAAK,EAAE;YAAEK,OAAO,EAAE;UAAkD;QAAE,CAAC;MAAE,CAAC;IAAE,CAAC;EAC7J,CAAC,CAAC;EACFS,OAAO,EAAE;IACPN,IAAI,EAAEA,CAAA,MAAO;MACXO,MAAM,EAAEA,CAAA,KAAMnB,OAAO,CAACC,OAAO,CAAC;QAAEC,IAAI,EAAE,IAAI;QAAEE,KAAK,EAAE;UAAEK,OAAO,EAAE;QAAkD;MAAE,CAAC,CAAC;MACpHW,YAAY,EAAEA,CAAA,MAAO;QAAElB,IAAI,EAAE;UAAEmB,SAAS,EAAE;QAAsD;MAAE,CAAC;IACrG,CAAC;EACH;AACF,CAAC;;AAED;AACA,IAAIC,QAAQ;AACZ,IAAI,CAAC/B,WAAW,IAAI,CAACI,eAAe,IAChCJ,WAAW,KAAK,wBAAwB,IACxCI,eAAe,KAAK,6BAA6B,EAAE;EACrD4B,OAAO,CAACC,IAAI,CAAC,wFAAwF,CAAC;EACtGD,OAAO,CAACC,IAAI,CAAC,sFAAsF,CAAC;EACpGF,QAAQ,GAAGzB,YAAY;AACzB,CAAC,MAAM;EACLyB,QAAQ,GAAGhC,YAAY,CAACC,WAAW,EAAEI,eAAe,CAAC;AACvD;AAEA,eAAe2B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}