{"ast":null,"code":"import _objectSpread from\"/Users/calichtl/Desktop/FoodTrack/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState}from'react';import supabase from'../utils/supabaseClient';import{useAuth}from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const EntriesContext=/*#__PURE__*/createContext();export const useEntries=()=>{const context=useContext(EntriesContext);if(!context){throw new Error('useEntries must be used within an EntriesProvider');}return context;};export const EntriesProvider=_ref=>{let{children}=_ref;const[entries,setEntries]=useState([]);const[loading,setLoading]=useState(false);const{user}=useAuth();const fetchEntries=async()=>{if(!user)return;setLoading(true);try{const{data,error}=await supabase.from('entries').select('*').eq('user_id',user.id).order('created_at',{ascending:false});if(error)throw error;setEntries(data||[]);}catch(error){console.error('Error fetching entries:',error);}finally{setLoading(false);}};const addEntry=async entryData=>{if(!user)return{error:'User not authenticated'};try{const{data,error}=await supabase.from('entries').insert([_objectSpread(_objectSpread({},entryData),{},{user_id:user.id})]).select().single();if(error)throw error;setEntries(prev=>[data,...prev]);return{data,error:null};}catch(error){console.error('Error adding entry:',error);return{data:null,error};}};const uploadImage=async file=>{if(!file)return null;try{const fileExt=file.name.split('.').pop();const fileName=\"\".concat(user.id,\"/\").concat(Date.now(),\".\").concat(fileExt);const{error}=await supabase.storage.from('food-images').upload(fileName,file);if(error)throw error;const{data:urlData}=supabase.storage.from('food-images').getPublicUrl(fileName);return urlData.publicUrl;}catch(error){console.error('Error uploading image:',error);return null;}};const value={entries,loading,fetchEntries,addEntry,uploadImage};return/*#__PURE__*/_jsx(EntriesContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","supabase","useAuth","jsx","_jsx","EntriesContext","useEntries","context","Error","EntriesProvider","_ref","children","entries","setEntries","loading","setLoading","user","fetchEntries","data","error","from","select","eq","id","order","ascending","console","addEntry","entryData","insert","_objectSpread","user_id","single","prev","uploadImage","file","fileExt","name","split","pop","fileName","concat","Date","now","storage","upload","urlData","getPublicUrl","publicUrl","value","Provider"],"sources":["/Users/calichtl/Desktop/FoodTrack/src/context/EntriesContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport supabase from '../utils/supabaseClient';\nimport { useAuth } from './AuthContext';\n\nconst EntriesContext = createContext();\n\nexport const useEntries = () => {\n  const context = useContext(EntriesContext);\n  if (!context) {\n    throw new Error('useEntries must be used within an EntriesProvider');\n  }\n  return context;\n};\n\nexport const EntriesProvider = ({ children }) => {\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { user } = useAuth();\n\n  const fetchEntries = async () => {\n    if (!user) return;\n    \n    setLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from('entries')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setEntries(data || []);\n    } catch (error) {\n      console.error('Error fetching entries:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addEntry = async (entryData) => {\n    if (!user) return { error: 'User not authenticated' };\n\n    try {\n      const { data, error } = await supabase\n        .from('entries')\n        .insert([{\n          ...entryData,\n          user_id: user.id\n        }])\n        .select()\n        .single();\n\n      if (error) throw error;\n      \n      setEntries(prev => [data, ...prev]);\n      return { data, error: null };\n    } catch (error) {\n      console.error('Error adding entry:', error);\n      return { data: null, error };\n    }\n  };\n\n  const uploadImage = async (file) => {\n    if (!file) return null;\n\n    try {\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${user.id}/${Date.now()}.${fileExt}`;\n      \n      const { error } = await supabase.storage\n        .from('food-images')\n        .upload(fileName, file);\n\n      if (error) throw error;\n\n      const { data: urlData } = supabase.storage\n        .from('food-images')\n        .getPublicUrl(fileName);\n\n      return urlData.publicUrl;\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      return null;\n    }\n  };\n\n  const value = {\n    entries,\n    loading,\n    fetchEntries,\n    addEntry,\n    uploadImage,\n  };\n\n  return (\n    <EntriesContext.Provider value={value}>\n      {children}\n    </EntriesContext.Provider>\n  );\n};\n"],"mappings":"sHAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAClE,MAAO,CAAAC,QAAQ,KAAM,yBAAyB,CAC9C,OAASC,OAAO,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExC,KAAM,CAAAC,cAAc,cAAGP,aAAa,CAAC,CAAC,CAEtC,MAAO,MAAM,CAAAQ,UAAU,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACM,cAAc,CAAC,CAC1C,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,mDAAmD,CAAC,CACtE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,eAAe,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC1C,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAEgB,IAAK,CAAC,CAAGd,OAAO,CAAC,CAAC,CAE1B,KAAM,CAAAe,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CAACD,IAAI,CAAE,OAEXD,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAEG,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAlB,QAAQ,CACnCmB,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,SAAS,CAAEN,IAAI,CAACO,EAAE,CAAC,CACtBC,KAAK,CAAC,YAAY,CAAE,CAAEC,SAAS,CAAE,KAAM,CAAC,CAAC,CAE5C,GAAIN,KAAK,CAAE,KAAM,CAAAA,KAAK,CACtBN,UAAU,CAACK,IAAI,EAAI,EAAE,CAAC,CACxB,CAAE,MAAOC,KAAK,CAAE,CACdO,OAAO,CAACP,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CAAC,OAAS,CACRJ,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAY,QAAQ,CAAG,KAAO,CAAAC,SAAS,EAAK,CACpC,GAAI,CAACZ,IAAI,CAAE,MAAO,CAAEG,KAAK,CAAE,wBAAyB,CAAC,CAErD,GAAI,CACF,KAAM,CAAED,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAlB,QAAQ,CACnCmB,IAAI,CAAC,SAAS,CAAC,CACfS,MAAM,CAAC,CAAAC,aAAA,CAAAA,aAAA,IACHF,SAAS,MACZG,OAAO,CAAEf,IAAI,CAACO,EAAE,GAChB,CAAC,CACFF,MAAM,CAAC,CAAC,CACRW,MAAM,CAAC,CAAC,CAEX,GAAIb,KAAK,CAAE,KAAM,CAAAA,KAAK,CAEtBN,UAAU,CAACoB,IAAI,EAAI,CAACf,IAAI,CAAE,GAAGe,IAAI,CAAC,CAAC,CACnC,MAAO,CAAEf,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAC9B,CAAE,MAAOA,KAAK,CAAE,CACdO,OAAO,CAACP,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,MAAO,CAAED,IAAI,CAAE,IAAI,CAAEC,KAAM,CAAC,CAC9B,CACF,CAAC,CAED,KAAM,CAAAe,WAAW,CAAG,KAAO,CAAAC,IAAI,EAAK,CAClC,GAAI,CAACA,IAAI,CAAE,MAAO,KAAI,CAEtB,GAAI,CACF,KAAM,CAAAC,OAAO,CAAGD,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAC1C,KAAM,CAAAC,QAAQ,IAAAC,MAAA,CAAMzB,IAAI,CAACO,EAAE,MAAAkB,MAAA,CAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,MAAAF,MAAA,CAAIL,OAAO,CAAE,CAEtD,KAAM,CAAEjB,KAAM,CAAC,CAAG,KAAM,CAAAlB,QAAQ,CAAC2C,OAAO,CACrCxB,IAAI,CAAC,aAAa,CAAC,CACnByB,MAAM,CAACL,QAAQ,CAAEL,IAAI,CAAC,CAEzB,GAAIhB,KAAK,CAAE,KAAM,CAAAA,KAAK,CAEtB,KAAM,CAAED,IAAI,CAAE4B,OAAQ,CAAC,CAAG7C,QAAQ,CAAC2C,OAAO,CACvCxB,IAAI,CAAC,aAAa,CAAC,CACnB2B,YAAY,CAACP,QAAQ,CAAC,CAEzB,MAAO,CAAAM,OAAO,CAACE,SAAS,CAC1B,CAAE,MAAO7B,KAAK,CAAE,CACdO,OAAO,CAACP,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,MAAO,KAAI,CACb,CACF,CAAC,CAED,KAAM,CAAA8B,KAAK,CAAG,CACZrC,OAAO,CACPE,OAAO,CACPG,YAAY,CACZU,QAAQ,CACRO,WACF,CAAC,CAED,mBACE9B,IAAA,CAACC,cAAc,CAAC6C,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAtC,QAAA,CACnCA,QAAQ,CACc,CAAC,CAE9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}